/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("$(document).ready(function () {\n  setTimeout(function () {\n    $('body').removeClass('loading'); // remove loader overlay when page is ready with 1 sec delay\n  }, 1000);\n  $('form.ajax-submit').on('submit', function (e) {\n    e.preventDefault();\n    var form = $(this);\n    var method = $(this).attr('method');\n    var url = $(this).attr('action');\n    var data = $(this).serializeArray();\n    var confirmation = $(this).attr('confirmation');\n    var confirmation_note = $(this).attr('confirmation-note');\n    var confirmation_cancelled_note = $(this).attr('confirmation-cancelled-note');\n    var isComputation = form.hasClass('form-computation');\n    var isInvalidPassword = false;\n    form.find('input[name=\"password\"]').each(function () {\n      var isChangePassword = $(this).hasClass('change-password');\n      var password = $(this).val();\n      var re = new RegExp(\"^(((?=.*[A-Z])(?=.*[0-9])(?=.*[a-z]))|((?=.*[0-9])(?=.*[A-Z])(?=.*[a-z]))|((?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])))(?=.{6,})\");\n\n      if (isChangePassword && password.length > 0 && password.length < 6 || !isChangePassword && !re.test(password) || isChangePassword && password.length > 5 && !re.test(password)) {\n        isInvalidPassword = true;\n      }\n    });\n\n    if (isInvalidPassword) {\n      swal({\n        title: \"Invalid password\",\n        text: \"Password must contain at least 1 uppercase, 1 lowercase and 1 numeric character.\",\n        icon: \"warning\",\n        dangerMode: true\n      });\n      return false;\n    }\n\n    if (isComputation) {\n      var total = 0;\n      form.find('input[name=\"value[]\"]').each(function () {\n        var input = $(this);\n        var value = input.val();\n        var action = input.closest('.action-coverage').find('input.action-input').val();\n\n        if (value.length && action != 'delete') {\n          total += parseInt(value);\n        }\n      });\n\n      if (total != 100) {\n        swal({\n          title: \"Please check criteria values\",\n          text: \"Total of all values must be exactly 100.\",\n          icon: \"warning\",\n          dangerMode: true\n        });\n        return false;\n      }\n    }\n\n    var invalidRequest = false;\n    form.find('.three-inputs-container').each(function () {\n      var threeInputs = $(this);\n\n      if (threeInputs.find(':input').length && !threeInputs.closest('.row-template-container').length) {\n        var total = 0;\n        threeInputs.find(':input').each(function () {\n          var input = $(this);\n          var value = input.val();\n\n          if (value.length) {\n            total += parseInt(value);\n          }\n        });\n\n        if (total != 100) {\n          invalidRequest = true;\n        }\n      }\n    });\n\n    if (invalidRequest) {\n      swal({\n        title: \"Please check subject period values\",\n        text: \"Total of all values must be exactly 100.\",\n        icon: \"warning\",\n        dangerMode: true\n      });\n      return false;\n    }\n\n    if (confirmation) {\n      swal({\n        title: \"Are you sure?\",\n        text: !confirmation_note ? \"Once deleted, you may not be able to recover this data.\" : confirmation_note,\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(function (willDelete) {\n        if (willDelete) {\n          submitForm(form, method, url, data);\n        } else {\n          swal(\"Cancelled action\", !confirmation_cancelled_note ? \"Data is retain.\" : confirmation_cancelled_note);\n        }\n      });\n    } else {\n      submitForm(form, method, url, data);\n    }\n  });\n\n  function submitForm(form, method, url, data) {\n    toastr.options.positionClass = 'toast-bottom-right';\n    toastr.options.extendedTimeOut = 1000;\n    toastr.options.timeOut = 2000;\n    toastr.options.fadeOut = 250;\n    toastr.options.fadeIn = 250;\n    $.ajax({\n      type: method,\n      url: url,\n      data: data,\n      dataType: 'json',\n      processData: true,\n      success: function success(data) {\n        if (data.resetForm) {\n          form.trigger(\"reset\");\n        }\n\n        if (data.redirect !== undefined) {\n          toastr.success('Redirecting please wait...');\n          setTimeout(function () {\n            window.location = data.redirect;\n          }, 2500);\n        }\n\n        if (data.notifMessage !== undefined) {\n          toastr.success(data.notifMessage);\n        }\n      },\n      error: function error(data, text, _error) {\n        if (data.responseJSON.message.length) {\n          for (var index = 0; index < data.responseJSON.message.length; index++) {\n            var message = data.responseJSON.message[index];\n            toastr.warning(message);\n          }\n        } else if (data.responseJSON.notifMessage.length) {\n          toastr.warning(data.responseJSON.notifMessage);\n        }\n      }\n    });\n  }\n\n  var password = document.getElementById(\"password\"),\n      confirm_password = document.getElementById(\"confirm_password\");\n\n  function validatePassword() {\n    if (password.value != confirm_password.value) {\n      confirm_password.setCustomValidity(\"Passwords Don't Match\");\n    } else {\n      confirm_password.setCustomValidity('');\n    }\n  }\n\n  if (password) {\n    password.onchange = validatePassword;\n    confirm_password.onkeyup = validatePassword;\n  }\n\n  setTimeout(function () {\n    $('.readonly-until-ready').prop('readonly', false);\n  }, 1000);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/app.js\n");

/***/ }),

/***/ "./resources/sass/app.scss":
/*!*********************************!*\
  !*** ./resources/sass/app.scss ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2Fzcy9hcHAuc2Nzcz9mNmMyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL3Nhc3MvYXBwLnNjc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/sass/app.scss\n");

/***/ }),

/***/ 0:
/*!*************************************************************!*\
  !*** multi ./resources/js/app.js ./resources/sass/app.scss ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! C:\xampp\htdocs\diliman-grading-system\resources\js\app.js */"./resources/js/app.js");
module.exports = __webpack_require__(/*! C:\xampp\htdocs\diliman-grading-system\resources\sass\app.scss */"./resources/sass/app.scss");


/***/ })

/******/ });